# ZSH RC for Jesse Millwood

export ZSH="${ZDOTDIR}/oh-my-zsh"
export ZSH_CUSTOM="$ZSH/custom"

function check_for_plugin(){
    [ -d "$ZSH/plugins/$1" ] || [ -d "$ZSH_CUSTOM/plugins/$1" ]
}

# Check for being an interactive shell
if [[ "$TERM" == "dumb" ]]; then
    unsetopt zle
    export PS1=""
else

DISABLE_AUTO_UPDATE="true"
ENABLE_CORRECTION="true"

plugins=(
    git
    rust
    cp
    colored-man-pages
    rsync
    themes
)

if check_for_plugin flatpak; then
    plugins+=( flatpak )
fi

if [ -d "${ZSH_CUSTOM}/themes/spaceship-prompt" ]; then
    ZSH_THEME="spaceship"
    SPACESHIP_DIR_SHOW=true
    SPACESHIP_DIR_COLOR="magenta"
    SPACESHIP_GIT_SHOW=true
    SPACESHIP_GIT_BRANCH_SHOW=true
    SPACESHIP_GIT_STATUS_SHOW=true
    SPACESHIP_USER_SHOW=always
    SPACESHIP_PROMPT_ORDER=(
        time          # Time stamps section
        user          # Username section
        dir           # Current directory section
        host          # Hostname section
        git           # Git section (git_branch + git_status)
        hg            # Mercurial section (hg_branch  + hg_status)
        package     # Package version
        node          # Node.js section
        ruby          # Ruby section
        elixir        # Elixir section
        # xcode       # Xcode section (Disabled)
        swift         # Swift section
        golang        # Go section
        php           # PHP section
        rust          # Rust section
        docker      # Docker section
        venv          # virtualenv section
        conda         # conda virtualenv section
        pyenv         # Pyenv section
        dotnet        # .NET section
        exec_time     # Execution time
        line_sep      # Line break
        battery       # Battery level and status
        jobs          # Background jobs indicator
        exit_code     # Exit code section
        char          # Prompt character
    )
else
    ZSH_THEME="gnzh"
fi

source $ZSH/oh-my-zsh.sh
autoload -U compinit promptinit
compinit
promptinit

unsetopt sharehistory

export EDITOR="emacsclient -a '' -t -s Default "
export VISUAL="emacsclient -a '' -c -s Default "

# Packages outside of oh-my-zsh installed to /usr/local/share/zsh/site-functions
export ZSH_SITEFUNCTIONS_DIR=/usr/local/share/zsh/site-functions
if [ -d ${ZSH_SITEFUNCTIONS_DIR}/zsh-autosuggestions ]; then
    source ${ZSH_SITEFUNCTIONS_DIR}/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

if [ -f ${ZSH_SITEFUNCTIONS_DIR}/zsh-syntax-highlighting.zsh ]; then
    source ${ZSH_SITEFUNCTIONS_DIR}/zsh-syntax-highlighting.zsh
fi

fi # For interactive shells
# Conditional PATH Additions _______________________________
if [ -d /opt/Appimages ]; then
    export PATH=/opt/Appimages:$PATH
fi

if [ -d /usr/local/go ]; then
    export PATH=/usr/local/go/bin:$PATH
fi

if [ -d $HOME/.local/bin ]; then
    export PATH=$PATH:$HOME/.local/bin
fi

if [ -d $HOME/.local/share/applications ]; then
    export XDG_DATA_DIRS=$HOME/.local/share/applications:${XDG_DATA_DIRS}
fi

# Conditional Enviornment Variables ________________________
if [ -d $HOME/.config/ripgrep ]; then
    export RIPGREP_CONFIG_PATH=$HOME/.config/ripgrep/ripgreprc
fi

# Personal aliases and functions ___________________________
function kill-emacsclient (){
    emacsclient -s Default -e '(save-buffers-kill-emacs)'
}

function kill-emacsclient-server (){
    emacsclient -s $1 -e '(save-buffers-kill-emacs)'
}

function ec () {
    emacsclient -a '' -c -s Default $1 &
}
function ect () {
    emacsclient -a '' -t -s Default $1
}

function ecs () {
    emacsclient -a '' -c -s $1 $2 &
}
function ects () {
    emacsclient -a '' -t -s $1 $2
}

function make-c-etags-table () {
    find . -name "*.[chCH]" -print | etags -
}

# OCAML Support ____________________________________________
if opam -v &> /dev/null; then
    eval $(opam env)
fi


# Local Variables:
# mode: sh
# End:
